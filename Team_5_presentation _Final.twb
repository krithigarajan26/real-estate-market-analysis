<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N States' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='1' max='50' min='1' />
      </column>
      <column alias='Total Energy (T Btu)' caption='Dynamic Measure' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
        <calculation class='tableau' formula='1.' />
        <aliases>
          <alias key='1.' value='Total Energy (T Btu)' />
          <alias key='2.' value='Total (billion dollars)' />
          <alias key='3.' value='Per household (M Btu)' />
          <alias key='4.' value='Per household (dollars)' />
          <alias key='5.' value='Per household member (million Btu)' />
          <alias key='6.' value='Per household member (dollars)' />
          <alias key='7.' value='Per square foot (K Btu)' />
          <alias key='8.' value='Per square foot (dollars)' />
        </aliases>
        <members>
          <member alias='Total Energy (T Btu)' value='1.' />
          <member alias='Total (billion dollars)' value='2.' />
          <member alias='Per household (M Btu)' value='3.' />
          <member alias='Per household (dollars)' value='4.' />
          <member alias='Per household member (million Btu)' value='5.' />
          <member alias='Per household member (dollars)' value='6.' />
          <member alias='Per square foot (K Btu)' value='7.' />
          <member alias='Per square foot (dollars)' value='8.' />
        </members>
      </column>
    </datasource>
    <datasource caption='State Distribution (Statewidedata)' inline='true' name='federated.01s3iiz0ozi32219nwd471h0wsf5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Statewidedata' name='excel-direct.1cvahqv0lom36v19kktre1wf32zy'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='Data/Group Project/Statewidedata1.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Electricity %]' />
            <value name='[Fuel oil or  kerosene %]' />
            <value name='[Natural gas %]' />
            <value name='[Propane %]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[State Distribution].[Electricity 1]' />
              <field name='[State Distribution].[Fuel oil or  kerosene 1]' />
              <field name='[State Distribution].[Natural gas 1]' />
              <field name='[State Distribution].[Propane 1]' />
            </group>
          </groups>
          <relation connection='excel-direct.1cvahqv0lom36v19kktre1wf32zy' name='State Distribution' table='[&apos;State Distribution$&apos;]' type='table'>
            <columns gridOrigin='A1:AM52:no:A1:AM52:1' header='yes' lost='0' outcome='1' processed='1820'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='real' name='Total U.S.b' ordinal='1' />
              <column datatype='integer' name='Total (trillion Btu)' ordinal='2' />
              <column datatype='real' name='Per household (million Btu)' ordinal='3' />
              <column datatype='real' name='Per household member (million Btu)' ordinal='4' />
              <column datatype='real' name='Per square foot (thousand Btu)' ordinal='5' />
              <column datatype='real' name='Total (billion dollars)' ordinal='6' />
              <column datatype='integer' name='Per household (dollars)' ordinal='7' />
              <column datatype='integer' name='Per household member (dollars)' ordinal='8' />
              <column datatype='real' name='Per square foot (dollars)' ordinal='9' />
              <column datatype='real' name='Space heatingb' ordinal='10' />
              <column datatype='real' name='Air handlers for heating' ordinal='11' />
              <column datatype='real' name='Air  condit-ioningc' ordinal='12' />
              <column datatype='real' name='Air handlers for cooling' ordinal='13' />
              <column datatype='real' name='Water heating' ordinal='14' />
              <column datatype='real' name='Cookingd' ordinal='15' />
              <column datatype='real' name='All refri-gerators' ordinal='16' />
              <column datatype='real' name='Most used refri-gerators' ordinal='17' />
              <column datatype='real' name='Second refri-gerators' ordinal='18' />
              <column datatype='real' name='Separate freezers' ordinal='19' />
              <column datatype='real' name='Clothes washers' ordinal='20' />
              <column datatype='real' name='Clothes dryers' ordinal='21' />
              <column datatype='real' name='All TVs and relatede' ordinal='22' />
              <column datatype='real' name='Most-used TVs' ordinal='23' />
              <column datatype='real' name='Lighting' ordinal='24' />
              <column datatype='real' name='Total' ordinal='25' />
              <column datatype='real' name='Electricity' ordinal='26' />
              <column datatype='integer' name='Electricity 1' ordinal='27' />
              <column datatype='real' name='Natural gas' ordinal='28' />
              <column datatype='integer' name='Natural gas 1' ordinal='29' />
              <column datatype='real' name='Propane' ordinal='30' />
              <column datatype='integer' name='Propane 1' ordinal='31' />
              <column datatype='real' name='Fuel oil or  kerosene' ordinal='32' />
              <column datatype='integer' name='Fuel oil or  kerosene 1' ordinal='33' />
              <column datatype='real' name='Avg. Total' ordinal='34' />
              <column datatype='real' name='Avg. Electricity' ordinal='35' />
              <column datatype='real' name='Avg. Natural gas' ordinal='36' />
              <column datatype='real' name='Avg. Propane' ordinal='37' />
              <column datatype='real' name='Avg. Fuel oil or kerosene' ordinal='38' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Electricity %]' />
            <value name='[Fuel oil or  kerosene %]' />
            <value name='[Natural gas %]' />
            <value name='[Propane %]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[State Distribution].[Electricity 1]' />
              <field name='[State Distribution].[Fuel oil or  kerosene 1]' />
              <field name='[State Distribution].[Natural gas 1]' />
              <field name='[State Distribution].[Propane 1]' />
            </group>
          </groups>
          <relation connection='excel-direct.1cvahqv0lom36v19kktre1wf32zy' name='State Distribution' table='[&apos;State Distribution$&apos;]' type='table'>
            <columns gridOrigin='A1:AM52:no:A1:AM52:1' header='yes' lost='0' outcome='1' processed='1820'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='real' name='Total U.S.b' ordinal='1' />
              <column datatype='integer' name='Total (trillion Btu)' ordinal='2' />
              <column datatype='real' name='Per household (million Btu)' ordinal='3' />
              <column datatype='real' name='Per household member (million Btu)' ordinal='4' />
              <column datatype='real' name='Per square foot (thousand Btu)' ordinal='5' />
              <column datatype='real' name='Total (billion dollars)' ordinal='6' />
              <column datatype='integer' name='Per household (dollars)' ordinal='7' />
              <column datatype='integer' name='Per household member (dollars)' ordinal='8' />
              <column datatype='real' name='Per square foot (dollars)' ordinal='9' />
              <column datatype='real' name='Space heatingb' ordinal='10' />
              <column datatype='real' name='Air handlers for heating' ordinal='11' />
              <column datatype='real' name='Air  condit-ioningc' ordinal='12' />
              <column datatype='real' name='Air handlers for cooling' ordinal='13' />
              <column datatype='real' name='Water heating' ordinal='14' />
              <column datatype='real' name='Cookingd' ordinal='15' />
              <column datatype='real' name='All refri-gerators' ordinal='16' />
              <column datatype='real' name='Most used refri-gerators' ordinal='17' />
              <column datatype='real' name='Second refri-gerators' ordinal='18' />
              <column datatype='real' name='Separate freezers' ordinal='19' />
              <column datatype='real' name='Clothes washers' ordinal='20' />
              <column datatype='real' name='Clothes dryers' ordinal='21' />
              <column datatype='real' name='All TVs and relatede' ordinal='22' />
              <column datatype='real' name='Most-used TVs' ordinal='23' />
              <column datatype='real' name='Lighting' ordinal='24' />
              <column datatype='real' name='Total' ordinal='25' />
              <column datatype='real' name='Electricity' ordinal='26' />
              <column datatype='integer' name='Electricity 1' ordinal='27' />
              <column datatype='real' name='Natural gas' ordinal='28' />
              <column datatype='integer' name='Natural gas 1' ordinal='29' />
              <column datatype='real' name='Propane' ordinal='30' />
              <column datatype='integer' name='Propane 1' ordinal='31' />
              <column datatype='real' name='Fuel oil or  kerosene' ordinal='32' />
              <column datatype='integer' name='Fuel oil or  kerosene 1' ordinal='33' />
              <column datatype='real' name='Avg. Total' ordinal='34' />
              <column datatype='real' name='Avg. Electricity' ordinal='35' />
              <column datatype='real' name='Avg. Natural gas' ordinal='36' />
              <column datatype='real' name='Avg. Propane' ordinal='37' />
              <column datatype='real' name='Avg. Fuel oil or kerosene' ordinal='38' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AM52:no:A1:AM52:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1820</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total U.S.b</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total U.S.b]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Total U.S.b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total (trillion Btu)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total (trillion Btu)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Total (trillion Btu)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household (million Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per household (million Btu)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Per household (million Btu)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household member (million Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per household member (million Btu)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Per household member (million Btu)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per square foot (thousand Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per square foot (thousand Btu)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Per square foot (thousand Btu)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total (billion dollars)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total (billion dollars)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Total (billion dollars)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household (dollars)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per household (dollars)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Per household (dollars)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household member (dollars)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per household member (dollars)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Per household member (dollars)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per square foot (dollars)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per square foot (dollars)]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Per square foot (dollars)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Space heatingb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Space heatingb]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Space heatingb</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air handlers for heating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Air handlers for heating]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Air handlers for heating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air  condit-ioningc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Air  condit-ioningc]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Air  condit-ioningc</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air handlers for cooling</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Air handlers for cooling]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Air handlers for cooling</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Water heating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Water heating]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Water heating</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cookingd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cookingd]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Cookingd</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All refri-gerators</remote-name>
            <remote-type>5</remote-type>
            <local-name>[All refri-gerators]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>All refri-gerators</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most used refri-gerators</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Most used refri-gerators]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Most used refri-gerators</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Second refri-gerators</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Second refri-gerators]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Second refri-gerators</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Separate freezers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Separate freezers]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Separate freezers</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clothes washers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Clothes washers]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Clothes washers</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clothes dryers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Clothes dryers]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Clothes dryers</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All TVs and relatede</remote-name>
            <remote-type>5</remote-type>
            <local-name>[All TVs and relatede]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>All TVs and relatede</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Most-used TVs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Most-used TVs]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Most-used TVs</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lighting</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lighting]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Lighting</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electricity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electricity]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Electricity</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Natural gas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Natural gas]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Natural gas</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Propane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Propane]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Propane</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fuel oil or  kerosene</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fuel oil or  kerosene]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Fuel oil or  kerosene</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg. Total]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Avg. Total</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Electricity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg. Electricity]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Avg. Electricity</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Natural gas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg. Natural gas]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Avg. Natural gas</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Propane</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg. Propane]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Avg. Propane</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. Fuel oil or kerosene</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg. Fuel oil or kerosene]</local-name>
            <parent-name>[State Distribution]</parent-name>
            <remote-alias>Avg. Fuel oil or kerosene</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[State Distribution_C10DA33D343448039ED8C3BD90B1909E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Air  conditioning' datatype='real' name='[Air  condit-ioningc]' role='measure' type='quantitative' />
      <column caption='Rank Dynamic' datatype='integer' name='[Calculation1]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF RANK([Calculation_1534460902969405440]) &lt;= [Parameters].[Parameter 1]&#10;THEN RANK([Calculation_1534460902969405440])&#10;END'>
          <table-calc ordering-field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[State]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Dynamic Measure' datatype='real' name='[Calculation_1534460902969405440]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2] &#10;WHEN 1 THEN AVG([Total (trillion Btu)])&#10;WHEN 2 THEN AVG([Total (billion dollars)])&#10;WHEN 3 THEN AVG([Per household (million Btu)])&#10;WHEN 4 THEN AVG([Per household (dollars)])&#10;WHEN 5 THEN AVG([Per household member (million Btu)])&#10;WHEN 6 THEN AVG([Per household member (dollars)])&#10;WHEN 7 THEN AVG([Per square foot (thousand Btu)])&#10;WHEN 8 THEN AVG([Per square foot (dollars)])&#10;END' />
      </column>
      <column caption='Dynamic Measure Filled' datatype='real' name='[Calculation_1707145801435869184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF RANK([Calculation_1534460902969405440]) &lt;= [Parameters].[Parameter 1]&#10;THEN [Calculation_1534460902969405440]&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank' datatype='boolean' name='[Calculation_1707145801437552641]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_1534460902969405440]) &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cooking' datatype='real' name='[Cookingd]' role='measure' type='quantitative' />
      <column caption='Fuel Consumption' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='% Consumption' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <column caption='Space heating' datatype='real' name='[Space heatingb]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='State Distribution' datatype='table' name='[__tableau_internal_object_id__].[State Distribution_C10DA33D343448039ED8C3BD90B1909E]' role='measure' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[State]' ordering-type='Field' />
      </column-instance>
      <group caption='Action (Fuel Consumption)' hidden='true' name='[Action (Fuel Consumption)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pivot Field Names]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation1:ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>15</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>50</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>49</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>48</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>47</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>14</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>46</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>45</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>44</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>13</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>43</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>42</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>41</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>12</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>40</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>39</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>38</bucket>
            </map>
            <map to='#db323f'>
              <bucket>11</bucket>
            </map>
            <map to='#db333f'>
              <bucket>37</bucket>
            </map>
            <map to='#de3640'>
              <bucket>36</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>35</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>10</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>34</bucket>
            </map>
            <map to='#e54244'>
              <bucket>33</bucket>
            </map>
            <map to='#e84746'>
              <bucket>32</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>31</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>9</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>30</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>29</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>28</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>8</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>27</bucket>
            </map>
            <map to='#f26250'>
              <bucket>26</bucket>
            </map>
            <map to='#f26553'>
              <bucket>25</bucket>
            </map>
            <map to='#f36855'>
              <bucket>7</bucket>
            </map>
            <map to='#f36957'>
              <bucket>24</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>23</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>22</bucket>
            </map>
            <map to='#f67561'>
              <bucket>6</bucket>
            </map>
            <map to='#f67561'>
              <bucket>21</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>19</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>18</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>5</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>17</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>16</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>4</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>3</bucket>
            </map>
            <map to='#fda695'>
              <bucket>2</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>1</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N States' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='1' max='50' min='1' />
        </column>
        <column alias='Total Energy (T Btu)' caption='Dynamic Measure' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Total Energy (T Btu)' />
            <alias key='2.' value='Total (billion dollars)' />
            <alias key='3.' value='Per household (M Btu)' />
            <alias key='4.' value='Per household (dollars)' />
            <alias key='5.' value='Per household member (million Btu)' />
            <alias key='6.' value='Per household member (dollars)' />
            <alias key='7.' value='Per square foot (K Btu)' />
            <alias key='8.' value='Per square foot (dollars)' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='State Distribution' id='State Distribution_C10DA33D343448039ED8C3BD90B1909E'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='string' name='Pivot Field Names' />
                  <column datatype='integer' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[Electricity %]' />
                  <value name='[Fuel oil or  kerosene %]' />
                  <value name='[Natural gas %]' />
                  <value name='[Propane %]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[State Distribution].[Electricity 1]' />
                    <field name='[State Distribution].[Fuel oil or  kerosene 1]' />
                    <field name='[State Distribution].[Natural gas 1]' />
                    <field name='[State Distribution].[Propane 1]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1cvahqv0lom36v19kktre1wf32zy' name='State Distribution' table='[&apos;State Distribution$&apos;]' type='table'>
                  <columns gridOrigin='A1:AM52:no:A1:AM52:1' header='yes' lost='0' outcome='1' processed='1820'>
                    <column datatype='string' name='State' ordinal='0' />
                    <column datatype='real' name='Total U.S.b' ordinal='1' />
                    <column datatype='integer' name='Total (trillion Btu)' ordinal='2' />
                    <column datatype='real' name='Per household (million Btu)' ordinal='3' />
                    <column datatype='real' name='Per household member (million Btu)' ordinal='4' />
                    <column datatype='real' name='Per square foot (thousand Btu)' ordinal='5' />
                    <column datatype='real' name='Total (billion dollars)' ordinal='6' />
                    <column datatype='integer' name='Per household (dollars)' ordinal='7' />
                    <column datatype='integer' name='Per household member (dollars)' ordinal='8' />
                    <column datatype='real' name='Per square foot (dollars)' ordinal='9' />
                    <column datatype='real' name='Space heatingb' ordinal='10' />
                    <column datatype='real' name='Air handlers for heating' ordinal='11' />
                    <column datatype='real' name='Air  condit-ioningc' ordinal='12' />
                    <column datatype='real' name='Air handlers for cooling' ordinal='13' />
                    <column datatype='real' name='Water heating' ordinal='14' />
                    <column datatype='real' name='Cookingd' ordinal='15' />
                    <column datatype='real' name='All refri-gerators' ordinal='16' />
                    <column datatype='real' name='Most used refri-gerators' ordinal='17' />
                    <column datatype='real' name='Second refri-gerators' ordinal='18' />
                    <column datatype='real' name='Separate freezers' ordinal='19' />
                    <column datatype='real' name='Clothes washers' ordinal='20' />
                    <column datatype='real' name='Clothes dryers' ordinal='21' />
                    <column datatype='real' name='All TVs and relatede' ordinal='22' />
                    <column datatype='real' name='Most-used TVs' ordinal='23' />
                    <column datatype='real' name='Lighting' ordinal='24' />
                    <column datatype='real' name='Total' ordinal='25' />
                    <column datatype='real' name='Electricity' ordinal='26' />
                    <column datatype='integer' name='Electricity 1' ordinal='27' />
                    <column datatype='real' name='Natural gas' ordinal='28' />
                    <column datatype='integer' name='Natural gas 1' ordinal='29' />
                    <column datatype='real' name='Propane' ordinal='30' />
                    <column datatype='integer' name='Propane 1' ordinal='31' />
                    <column datatype='real' name='Fuel oil or  kerosene' ordinal='32' />
                    <column datatype='integer' name='Fuel oil or  kerosene 1' ordinal='33' />
                    <column datatype='real' name='Avg. Total' ordinal='34' />
                    <column datatype='real' name='Avg. Electricity' ordinal='35' />
                    <column datatype='real' name='Avg. Natural gas' ordinal='36' />
                    <column datatype='real' name='Avg. Propane' ordinal='37' />
                    <column datatype='real' name='Avg. Fuel oil or kerosene' ordinal='38' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Housing_Type (ce1.1)' inline='true' name='federated.0woaopf1iooph512tz2gy1l1hwzx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ce1.1' name='excel-direct.0iwppi207ktujm1bmbkbu1hfweg8'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='Data/Downloads/ce1.1.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0iwppi207ktujm1bmbkbu1hfweg8' name='Housing_Type' table='[Housing_Type$]' type='table'>
          <columns gridOrigin='A1:J6:no:A1:J6:1' lost='0' outcome='1' processed='45'>
            <column datatype='string' name='Housing unit type' ordinal='0' />
            <column datatype='real' name='Total U.S.b' ordinal='1' />
            <column datatype='integer' name='Total (trillion Btu)' ordinal='2' />
            <column datatype='real' name='Per household (million Btu)' ordinal='3' />
            <column datatype='real' name='Per household member (million Btu)' ordinal='4' />
            <column datatype='real' name='Per square foot (thousand Btu)' ordinal='5' />
            <column datatype='real' name='Total (billion dollars)' ordinal='6' />
            <column datatype='integer' name='Per household (dollars)' ordinal='7' />
            <column datatype='integer' name='Per household member (dollars)' ordinal='8' />
            <column datatype='real' name='Per square foot (dollars)' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0iwppi207ktujm1bmbkbu1hfweg8' name='Housing_Type' table='[Housing_Type$]' type='table'>
          <columns gridOrigin='A1:J6:no:A1:J6:1' lost='0' outcome='1' processed='45'>
            <column datatype='string' name='Housing unit type' ordinal='0' />
            <column datatype='real' name='Total U.S.b' ordinal='1' />
            <column datatype='integer' name='Total (trillion Btu)' ordinal='2' />
            <column datatype='real' name='Per household (million Btu)' ordinal='3' />
            <column datatype='real' name='Per household member (million Btu)' ordinal='4' />
            <column datatype='real' name='Per square foot (thousand Btu)' ordinal='5' />
            <column datatype='real' name='Total (billion dollars)' ordinal='6' />
            <column datatype='integer' name='Per household (dollars)' ordinal='7' />
            <column datatype='integer' name='Per household member (dollars)' ordinal='8' />
            <column datatype='real' name='Per square foot (dollars)' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J6:no:A1:J6:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>45</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Housing unit type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Housing unit type]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Housing unit type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total U.S.b</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total U.S.b]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Total U.S.b</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total (trillion Btu)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total (trillion Btu)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Total (trillion Btu)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household (million Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per household (million Btu)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Per household (million Btu)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household member (million Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per household member (million Btu)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Per household member (million Btu)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per square foot (thousand Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per square foot (thousand Btu)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Per square foot (thousand Btu)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total (billion dollars)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total (billion dollars)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Total (billion dollars)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household (dollars)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per household (dollars)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Per household (dollars)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household member (dollars)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per household member (dollars)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Per household member (dollars)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per square foot (dollars)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per square foot (dollars)]</local-name>
            <parent-name>[Housing_Type]</parent-name>
            <remote-alias>Per square foot (dollars)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Housing!Type_155FB3BCAD644C11860B35F62D573128]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Housing_Type' datatype='table' name='[__tableau_internal_object_id__].[Housing!Type_155FB3BCAD644C11860B35F62D573128]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Housing_Type' id='Housing!Type_155FB3BCAD644C11860B35F62D573128'>
            <properties context=''>
              <relation connection='excel-direct.0iwppi207ktujm1bmbkbu1hfweg8' name='Housing_Type' table='[Housing_Type$]' type='table'>
                <columns gridOrigin='A1:J6:no:A1:J6:1' lost='0' outcome='1' processed='45'>
                  <column datatype='string' name='Housing unit type' ordinal='0' />
                  <column datatype='real' name='Total U.S.b' ordinal='1' />
                  <column datatype='integer' name='Total (trillion Btu)' ordinal='2' />
                  <column datatype='real' name='Per household (million Btu)' ordinal='3' />
                  <column datatype='real' name='Per household member (million Btu)' ordinal='4' />
                  <column datatype='real' name='Per square foot (thousand Btu)' ordinal='5' />
                  <column datatype='real' name='Total (billion dollars)' ordinal='6' />
                  <column datatype='integer' name='Per household (dollars)' ordinal='7' />
                  <column datatype='integer' name='Per household member (dollars)' ordinal='8' />
                  <column datatype='real' name='Per square foot (dollars)' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='YM (Year vs members consumption)' inline='true' name='federated.195t77c1pbeg4l18ml9dl0zji2hk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Year vs members consumption' name='excel-direct.17dcvgj06j21u41dsztrw12tnxgs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='Data/Downloads 1/Year vs members consumption.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17dcvgj06j21u41dsztrw12tnxgs' name='YM' table='[YM$]' type='table'>
          <columns gridOrigin='A1:D46:no:A1:D46:0' header='yes' outcome='2'>
            <column datatype='string' name='Year of construction' ordinal='0' />
            <column datatype='integer' name='Number of members in a Household' ordinal='1' />
            <column datatype='real' name='Energy Consumption' ordinal='2' />
            <column datatype='real' name='Per Household (million Btu)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17dcvgj06j21u41dsztrw12tnxgs' name='YM' table='[YM$]' type='table'>
          <columns gridOrigin='A1:D46:no:A1:D46:0' header='yes' outcome='2'>
            <column datatype='string' name='Year of construction' ordinal='0' />
            <column datatype='integer' name='Number of members in a Household' ordinal='1' />
            <column datatype='real' name='Energy Consumption' ordinal='2' />
            <column datatype='real' name='Per Household (million Btu)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[YM]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D46:no:A1:D46:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of construction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year of construction]</local-name>
            <parent-name>[YM]</parent-name>
            <remote-alias>Year of construction</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[YM_D70839E581314FC0B52FFF27BB0E1A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of members in a Household</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of members in a Household]</local-name>
            <parent-name>[YM]</parent-name>
            <remote-alias>Number of members in a Household</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[YM_D70839E581314FC0B52FFF27BB0E1A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy Consumption]</local-name>
            <parent-name>[YM]</parent-name>
            <remote-alias>Energy Consumption</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[YM_D70839E581314FC0B52FFF27BB0E1A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per Household (million Btu)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per Household (million Btu)]</local-name>
            <parent-name>[YM]</parent-name>
            <remote-alias>Per Household (million Btu)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[YM_D70839E581314FC0B52FFF27BB0E1A86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Energy Consumption]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Number of members in a Household]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Per Household (million Btu)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year of construction]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='YM' datatype='table' name='[__tableau_internal_object_id__].[YM_D70839E581314FC0B52FFF27BB0E1A86]' role='measure' type='quantitative' />
      <column-instance column='[Number of members in a Household]' derivation='None' name='[none:Number of members in a Household:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year of construction]' derivation='None' name='[none:Year of construction:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy Consumption]' derivation='Sum' name='[sum:Energy Consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per Household (million Btu)]' derivation='Sum' name='[sum:Per Household (million Btu):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Year of construction:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Before 1950&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1980 to 1989&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;1970 to 1979&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;2016 to 2020&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2000 to 2009&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1960 to 1969&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;1990 to 1999&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1950 to 1959&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;2010 to 2015&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[attr:Energy Consumption:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[avg:Energy Consumption:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[sum:Energy Consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[attr:Per Household (million Btu):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[avg:Per Household (million Btu):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[sum:Per Household (million Btu):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Number of members in a Household:ok]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>5</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>4</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>3</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>2</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='YM' id='YM_D70839E581314FC0B52FFF27BB0E1A86'>
            <properties context=''>
              <relation connection='excel-direct.17dcvgj06j21u41dsztrw12tnxgs' name='YM' table='[YM$]' type='table'>
                <columns gridOrigin='A1:D46:no:A1:D46:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year of construction' ordinal='0' />
                  <column datatype='integer' name='Number of members in a Household' ordinal='1' />
                  <column datatype='real' name='Energy Consumption' ordinal='2' />
                  <column datatype='real' name='Per Household (million Btu)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='2015 (Consumption per sq ft by home size(sq ft))' inline='true' name='federated.14g1uxh1pkhrv318ps6351y72jxz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Consumption per sq ft by home size(sq ft)' name='excel-direct.0i3fdpi1ni5t9x1bn5djz0cx677h'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='Data/Visual Analytics/Consumption per sq ft by home size(sq ft).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0i3fdpi1ni5t9x1bn5djz0cx677h' name='2015' table='[&apos;2015$&apos;]' type='table'>
          <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='2'>
            <column datatype='string' name='Total square footagef' ordinal='0' />
            <column datatype='real' name='No of Housing Units 2020' ordinal='1' />
            <column datatype='real' name='Per square foot (thousand Btu) 2020' ordinal='2' />
            <column datatype='real' name='Percentile Rank' ordinal='3' />
            <column datatype='string' name='Efficiency benchmark' ordinal='4' />
            <column datatype='real' name='No of Housing Units 2015' ordinal='5' />
            <column datatype='real' name='Per square foot (thousand Btu) 2015' ordinal='6' />
            <column datatype='integer' name='Per household' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0i3fdpi1ni5t9x1bn5djz0cx677h' name='2015' table='[&apos;2015$&apos;]' type='table'>
          <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='2'>
            <column datatype='string' name='Total square footagef' ordinal='0' />
            <column datatype='real' name='No of Housing Units 2020' ordinal='1' />
            <column datatype='real' name='Per square foot (thousand Btu) 2020' ordinal='2' />
            <column datatype='real' name='Percentile Rank' ordinal='3' />
            <column datatype='string' name='Efficiency benchmark' ordinal='4' />
            <column datatype='real' name='No of Housing Units 2015' ordinal='5' />
            <column datatype='real' name='Per square foot (thousand Btu) 2015' ordinal='6' />
            <column datatype='integer' name='Per household' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2015]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H7:no:A1:H7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total square footagef</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total square footagef]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>Total square footagef</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of Housing Units 2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of Housing Units 2020]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>No of Housing Units 2020</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per square foot (thousand Btu) 2020</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per square foot (thousand Btu) 2020]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>Per square foot (thousand Btu) 2020</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentile Rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentile Rank]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>Percentile Rank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Efficiency benchmark</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Efficiency benchmark]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>Efficiency benchmark</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No of Housing Units 2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[No of Housing Units 2015]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>No of Housing Units 2015</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per square foot (thousand Btu) 2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per square foot (thousand Btu) 2015]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>Per square foot (thousand Btu) 2015</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per household</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per household]</local-name>
            <parent-name>[2015]</parent-name>
            <remote-alias>Per household</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2015_263CB820C747476C9CC0345DEDA995AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='2015' datatype='table' name='[__tableau_internal_object_id__].[2015_263CB820C747476C9CC0345DEDA995AF]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='6' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2015' id='2015_263CB820C747476C9CC0345DEDA995AF'>
            <properties context=''>
              <relation connection='excel-direct.0i3fdpi1ni5t9x1bn5djz0cx677h' name='2015' table='[&apos;2015$&apos;]' type='table'>
                <columns gridOrigin='A1:H7:no:A1:H7:0' header='yes' outcome='2'>
                  <column datatype='string' name='Total square footagef' ordinal='0' />
                  <column datatype='real' name='No of Housing Units 2020' ordinal='1' />
                  <column datatype='real' name='Per square foot (thousand Btu) 2020' ordinal='2' />
                  <column datatype='real' name='Percentile Rank' ordinal='3' />
                  <column datatype='string' name='Efficiency benchmark' ordinal='4' />
                  <column datatype='real' name='No of Housing Units 2015' ordinal='5' />
                  <column datatype='real' name='Per square foot (thousand Btu) 2015' ordinal='6' />
                  <column datatype='integer' name='Per household' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Energy consumption by year)' inline='true' name='federated.1nnrl6q0b411a3108elak0d3ko5p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Energy consumption by year' name='excel-direct.04vq0en15j2xcu182z72n0h73qz8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='Data/Visual Analytics 1/Energy consumption by year.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04vq0en15j2xcu182z72n0h73qz8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F75:no:A1:F75:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='real' name='coal' ordinal='1' />
            <column datatype='real' name='natural gas' ordinal='2' />
            <column datatype='real' name='petroleum' ordinal='3' />
            <column datatype='real' name='nuclear' ordinal='4' />
            <column datatype='real' name='renewables' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04vq0en15j2xcu182z72n0h73qz8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F75:no:A1:F75:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='real' name='coal' ordinal='1' />
            <column datatype='real' name='natural gas' ordinal='2' />
            <column datatype='real' name='petroleum' ordinal='3' />
            <column datatype='real' name='nuclear' ordinal='4' />
            <column datatype='real' name='renewables' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F75:no:A1:F75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>coal</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>natural gas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[natural gas]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>natural gas</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>petroleum</remote-name>
            <remote-type>5</remote-type>
            <local-name>[petroleum]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>petroleum</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuclear</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nuclear]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>nuclear</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>renewables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[renewables]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>renewables</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='total consumption' datatype='real' name='[Calculation_3306979200694067200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[coal]+[natural gas]+[nuclear]+[renewables]+[petroleum]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F]' role='measure' type='quantitative' />
      <column caption='Coal' datatype='real' name='[coal]' role='measure' type='quantitative' />
      <column caption='Natural Gas' datatype='real' name='[natural gas]' role='measure' type='quantitative' />
      <column caption='Nuclear' datatype='real' name='[nuclear]' role='measure' type='quantitative' />
      <column caption='Petroleum' datatype='real' name='[petroleum]' role='measure' type='quantitative' />
      <column caption='Renewables' datatype='real' name='[renewables]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[coal]' derivation='Sum' name='[sum:coal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[natural gas]' derivation='Sum' name='[sum:natural gas:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nuclear]' derivation='Sum' name='[sum:nuclear:qk]' pivot='key' type='quantitative' />
      <column-instance column='[petroleum]' derivation='Sum' name='[sum:petroleum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[renewables]' derivation='Sum' name='[sum:renewables:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:renewables:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:petroleum:qk]&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:natural gas:qk]&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:nuclear:qk]&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:coal:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F5B754ED38DF43AC9FC621D3F2E4162F'>
            <properties context=''>
              <relation connection='excel-direct.04vq0en15j2xcu182z72n0h73qz8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:F75:no:A1:F75:0' header='yes' outcome='6'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='real' name='coal' ordinal='1' />
                  <column datatype='real' name='natural gas' ordinal='2' />
                  <column datatype='real' name='petroleum' ordinal='3' />
                  <column datatype='real' name='nuclear' ordinal='4' />
                  <column datatype='real' name='renewables' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_D837F4EB28D648EB8AB01EFD6A152D83]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='State Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Consumption per sq ft by home size'>
      <table>
        <view>
          <datasources>
            <datasource caption='2015 (Consumption per sq ft by home size(sq ft))' name='federated.14g1uxh1pkhrv318ps6351y72jxz' />
          </datasources>
          <datasource-dependencies datasource='federated.14g1uxh1pkhrv318ps6351y72jxz'>
            <column datatype='integer' name='[Per household]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per square foot (thousand Btu) 2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per square foot (thousand Btu) 2020]' role='measure' type='quantitative' />
            <column datatype='string' name='[Total square footagef]' role='dimension' type='nominal' />
            <column-instance column='[Total square footagef]' derivation='None' name='[none:Total square footagef:nk]' pivot='key' type='nominal' />
            <column-instance column='[Per household]' derivation='Sum' name='[sum:Per household:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per square foot (thousand Btu) 2015]' derivation='Sum' name='[sum:Per square foot (thousand Btu) 2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per square foot (thousand Btu) 2020]' derivation='Sum' name='[sum:Per square foot (thousand Btu) 2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[none:Total square footagef:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Less than 1,000&quot;</bucket>
              <bucket>&quot;1,000 to 1,499&quot;</bucket>
              <bucket>&quot;1,500 to 1,999&quot;</bucket>
              <bucket>&quot;2,000 to 2,499&quot;</bucket>
              <bucket>&quot;2,500 to 2,999&quot;</bucket>
              <bucket>&quot;3,000 or more&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.14g1uxh1pkhrv318ps6351y72jxz].[none:Total square footagef:nk]' value='131' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2015:qk]' />
            </encodings>
            <reference-line axis-column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2020:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2015:qk]' z-order='2' />
            <reference-line axis-column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2020:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2015:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2020:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2015:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per household:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2015:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per square foot (thousand Btu) 2020:qk] + [federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per household:qk])</rows>
        <cols>[federated.14g1uxh1pkhrv318ps6351y72jxz].[none:Total square footagef:nk]</cols>
      </table>
      <simple-id uuid='{987493F8-6B3E-4458-86C7-492C44297911}' />
    </worksheet>
    <worksheet name='Energy consumption'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Energy Consumption for Households over Year of Construction and Number of Household Members</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='YM (Year vs members consumption)' name='federated.195t77c1pbeg4l18ml9dl0zji2hk' />
          </datasources>
          <datasource-dependencies datasource='federated.195t77c1pbeg4l18ml9dl0zji2hk'>
            <column datatype='real' name='[Energy Consumption]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Number of members in a Household]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Per Household (million Btu)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year of construction]' role='dimension' type='nominal' />
            <column-instance column='[Number of members in a Household]' derivation='None' name='[none:Number of members in a Household:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year of construction]' derivation='None' name='[none:Year of construction:nk]' pivot='key' type='nominal' />
            <column-instance column='[Energy Consumption]' derivation='Sum' name='[sum:Energy Consumption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per Household (million Btu)]' derivation='Sum' name='[sum:Per Household (million Btu):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[sum:Energy Consumption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.195t77c1pbeg4l18ml9dl0zji2hk].[sum:Per Household (million Btu):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Number of members in a Household:ok]'>
            <groupfilter function='level-members' level='[none:Number of members in a Household:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Year of construction:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Before 1950&quot;</bucket>
              <bucket>&quot;1950 to 1959&quot;</bucket>
              <bucket>&quot;1960 to 1969&quot;</bucket>
              <bucket>&quot;1970 to 1979&quot;</bucket>
              <bucket>&quot;1980 to 1989&quot;</bucket>
              <bucket>&quot;1990 to 1999&quot;</bucket>
              <bucket>&quot;2000 to 2009&quot;</bucket>
              <bucket>&quot;2010 to 2015&quot;</bucket>
              <bucket>&quot;2016 to 2020&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.195t77c1pbeg4l18ml9dl0zji2hk].[:Measure Names]</column>
            <column>[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Number of members in a Household:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[Multiple Values]' scope='rows' value='Energy Consumption (Million BTU)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[:Measure Names]' value='90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Number of members in a Household:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.195t77c1pbeg4l18ml9dl0zji2hk].[Multiple Values]</rows>
        <cols>([federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Year of construction:nk] / [federated.195t77c1pbeg4l18ml9dl0zji2hk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{9E45692F-237D-45C1-BAB7-357EF4E6B449}' />
    </worksheet>
    <worksheet name='Fuel Consumption'>
      <table>
        <view>
          <datasources>
            <datasource caption='State Distribution (Statewidedata)' name='federated.01s3iiz0ozi32219nwd471h0wsf5' />
          </datasources>
          <datasource-dependencies datasource='federated.01s3iiz0ozi32219nwd471h0wsf5'>
            <column caption='Fuel Consumption' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='% Consumption' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Illinois&quot;' user:ui-action-filter='[Action1_232ED01A70884F4084E53B29E2E93723]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[avg:Pivot Field Values:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:Pivot Field Names:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01s3iiz0ozi32219nwd471h0wsf5].[avg:Pivot Field Values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01s3iiz0ozi32219nwd471h0wsf5].[avg:Pivot Field Values:qk]</column>
            <column>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:Pivot Field Names:nk]' value='90' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01s3iiz0ozi32219nwd471h0wsf5].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:Pivot Field Names:nk]</cols>
      </table>
      <simple-id uuid='{E987AE68-1839-48F3-B2C2-40A943C9977A}' />
    </worksheet>
    <worksheet name='Household Total Energy Consumption'>
      <table>
        <view>
          <datasources>
            <datasource caption='State Distribution (Statewidedata)' name='federated.01s3iiz0ozi32219nwd471h0wsf5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01s3iiz0ozi32219nwd471h0wsf5'>
            <column caption='Air  conditioning' datatype='real' name='[Air  condit-ioningc]' role='measure' type='quantitative' />
            <column datatype='real' name='[Air handlers for cooling]' role='measure' type='quantitative' />
            <column datatype='real' name='[Air handlers for heating]' role='measure' type='quantitative' />
            <column datatype='real' name='[All TVs and relatede]' role='measure' type='quantitative' />
            <column datatype='real' name='[All refri-gerators]' role='measure' type='quantitative' />
            <column datatype='real' name='[Avg. Total]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothes dryers]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothes washers]' role='measure' type='quantitative' />
            <column caption='Cooking' datatype='real' name='[Cookingd]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lighting]' role='measure' type='quantitative' />
            <column datatype='real' name='[Most used refri-gerators]' role='measure' type='quantitative' />
            <column datatype='real' name='[Most-used TVs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Separate freezers]' role='measure' type='quantitative' />
            <column caption='Space heating' datatype='real' name='[Space heatingb]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Water heating]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Air  condit-ioningc]' derivation='Sum' name='[sum:Air  condit-ioningc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Air handlers for cooling]' derivation='Sum' name='[sum:Air handlers for cooling:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Air handlers for heating]' derivation='Sum' name='[sum:Air handlers for heating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[All TVs and relatede]' derivation='Sum' name='[sum:All TVs and relatede:qk]' pivot='key' type='quantitative' />
            <column-instance column='[All refri-gerators]' derivation='Sum' name='[sum:All refri-gerators:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Avg. Total]' derivation='Sum' name='[sum:Avg. Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothes dryers]' derivation='Sum' name='[sum:Clothes dryers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothes washers]' derivation='Sum' name='[sum:Clothes washers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cookingd]' derivation='Sum' name='[sum:Cookingd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lighting]' derivation='Sum' name='[sum:Lighting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Most used refri-gerators]' derivation='Sum' name='[sum:Most used refri-gerators:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Most-used TVs]' derivation='Sum' name='[sum:Most-used TVs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Separate freezers]' derivation='Sum' name='[sum:Separate freezers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Space heatingb]' derivation='Sum' name='[sum:Space heatingb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Water heating]' derivation='Sum' name='[sum:Water heating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Space heatingb:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Air handlers for heating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Air  condit-ioningc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Air handlers for cooling:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Water heating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Cookingd:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:All refri-gerators:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Most used refri-gerators:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Separate freezers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Clothes washers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Clothes dryers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:All TVs and relatede:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Most-used TVs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Lighting:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Space heatingb:qk]&quot;</bucket>
              <bucket>&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Air handlers for heating:qk]&quot;</bucket>
              <bucket>&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Air  condit-ioningc:qk]&quot;</bucket>
              <bucket>&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Air handlers for cooling:qk]&quot;</bucket>
              <bucket>&quot;[federated.01s3iiz0ozi32219nwd471h0wsf5].[sum:Avg. Total:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Illinois&quot;' user:ui-action-filter='[Action1_232ED01A70884F4084E53B29E2E93723]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01s3iiz0ozi32219nwd471h0wsf5].[:Measure Names]</column>
            <column>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:State:nk]</rows>
        <cols>[federated.01s3iiz0ozi32219nwd471h0wsf5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E3703A6D-2F21-4755-9391-1F54BF3DADBE}' />
    </worksheet>
    <worksheet name='Housing Unit per Household Member'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Housing unit type analysis with  Energy consumed &amp; Cost Per Household Member</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Housing_Type (ce1.1)' name='federated.0woaopf1iooph512tz2gy1l1hwzx' />
          </datasources>
          <datasource-dependencies datasource='federated.0woaopf1iooph512tz2gy1l1hwzx'>
            <column datatype='string' name='[Housing unit type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Per household member (million Btu)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per square foot (thousand Btu)]' role='measure' type='quantitative' />
            <column-instance column='[Housing unit type]' derivation='None' name='[none:Housing unit type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Per household member (million Btu)]' derivation='Sum' name='[sum:Per household member (million Btu):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per square foot (thousand Btu)]' derivation='Sum' name='[sum:Per square foot (thousand Btu):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0woaopf1iooph512tz2gy1l1hwzx].[none:Housing unit type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]' scope='rows' value='Per household (million Btu)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0woaopf1iooph512tz2gy1l1hwzx].[none:Housing unit type:nk]' value='195' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]' z-order='1' />
            <reference-line axis-column='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]' z-order='2' />
            <reference-line axis-column='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per square foot (thousand Btu):qk]' enable-instant-analytics='true' formula='average' id='refline3' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per square foot (thousand Btu):qk]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per square foot (thousand Btu):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per household member (million Btu):qk] + [federated.0woaopf1iooph512tz2gy1l1hwzx].[sum:Per square foot (thousand Btu):qk])</rows>
        <cols>[federated.0woaopf1iooph512tz2gy1l1hwzx].[none:Housing unit type:nk]</cols>
      </table>
      <simple-id uuid='{8B57E86F-5A20-4782-8C54-10A6ECCDF3E8}' />
    </worksheet>
    <worksheet name='State Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Filled map of &lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt; for &lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; states</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State Distribution (Statewidedata)' name='federated.01s3iiz0ozi32219nwd471h0wsf5' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N States' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='50' min='1' />
            </column>
            <column alias='Total Energy (T Btu)' caption='Dynamic Measure' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
              <calculation class='tableau' formula='1.' />
              <aliases>
                <alias key='1.' value='Total Energy (T Btu)' />
                <alias key='2.' value='Total (billion dollars)' />
                <alias key='3.' value='Per household (M Btu)' />
                <alias key='4.' value='Per household (dollars)' />
                <alias key='5.' value='Per household member (million Btu)' />
                <alias key='6.' value='Per household member (dollars)' />
                <alias key='7.' value='Per square foot (K Btu)' />
                <alias key='8.' value='Per square foot (dollars)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01s3iiz0ozi32219nwd471h0wsf5'>
            <column caption='Rank Dynamic' datatype='integer' name='[Calculation1]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='IF RANK([Calculation_1534460902969405440]) &lt;= [Parameters].[Parameter 1]&#10;THEN RANK([Calculation_1534460902969405440])&#10;END'>
                <table-calc ordering-field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[State]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Dynamic Measure' datatype='real' name='[Calculation_1534460902969405440]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2] &#10;WHEN 1 THEN AVG([Total (trillion Btu)])&#10;WHEN 2 THEN AVG([Total (billion dollars)])&#10;WHEN 3 THEN AVG([Per household (million Btu)])&#10;WHEN 4 THEN AVG([Per household (dollars)])&#10;WHEN 5 THEN AVG([Per household member (million Btu)])&#10;WHEN 6 THEN AVG([Per household member (dollars)])&#10;WHEN 7 THEN AVG([Per square foot (thousand Btu)])&#10;WHEN 8 THEN AVG([Per square foot (dollars)])&#10;END' />
            </column>
            <column datatype='integer' name='[Per household (dollars)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per household (million Btu)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Per household member (dollars)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per household member (million Btu)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per square foot (dollars)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Per square foot (thousand Btu)]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Total (billion dollars)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total (trillion Btu)]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[State]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[usr:Calculation1:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='5' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='6' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='7' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='8' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='9' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='10' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='11' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='12' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='13' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='14' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='15' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='16' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='17' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='18' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='19' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='21' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='22' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='23' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='24' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='25' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='26' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='27' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='28' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='29' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='30' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='31' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='32' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='33' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='34' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='35' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='36' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='37' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='38' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='39' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='40' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='41' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='42' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='43' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='44' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='45' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='46' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='47' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='48' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='49' />
              <groupfilter function='member' level='[usr:Calculation1:ok]' member='50' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01s3iiz0ozi32219nwd471h0wsf5].[usr:Calculation1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Longitude (generated)]' field-type='quantitative' max='52144851.640188202' min='5413374.8508918807' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Latitude (generated)]' field-type='quantitative' max='14351070.478965003' min='646992.7460219441' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[usr:Calculation1:ok]' />
              <text column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[usr:Calculation1:ok]' />
              <lod column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:State:nk]' />
              <geometry column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Latitude (generated)]</rows>
        <cols>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5DE7AA97-FE8E-464E-A184-803D9E2B1625}' />
    </worksheet>
    <worksheet name='US Energy consumption by source'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Energy consumption by year)' name='federated.1nnrl6q0b411a3108elak0d3ko5p' />
          </datasources>
          <datasource-dependencies datasource='federated.1nnrl6q0b411a3108elak0d3ko5p'>
            <column caption='total consumption' datatype='real' name='[Calculation_3306979200694067200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[coal]+[natural gas]+[nuclear]+[renewables]+[petroleum]' />
            </column>
            <column caption='Coal' datatype='real' name='[coal]' role='measure' type='quantitative' />
            <column caption='Natural Gas' datatype='real' name='[natural gas]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Nuclear' datatype='real' name='[nuclear]' role='measure' type='quantitative' />
            <column caption='Petroleum' datatype='real' name='[petroleum]' role='measure' type='quantitative' />
            <column caption='Renewables' datatype='real' name='[renewables]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3306979200694067200]' derivation='Sum' name='[sum:Calculation_3306979200694067200:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal]' derivation='Sum' name='[sum:coal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[natural gas]' derivation='Sum' name='[sum:natural gas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nuclear]' derivation='Sum' name='[sum:nuclear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[petroleum]' derivation='Sum' name='[sum:petroleum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[renewables]' derivation='Sum' name='[sum:renewables:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nnrl6q0b411a3108elak0d3ko5p].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:renewables:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:nuclear:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:coal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:natural gas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:petroleum:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1nnrl6q0b411a3108elak0d3ko5p].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:renewables:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:nuclear:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:coal:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:natural gas:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:petroleum:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1nnrl6q0b411a3108elak0d3ko5p].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nnrl6q0b411a3108elak0d3ko5p].[Multiple Values]' field-type='quantitative' max='103.7757' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1nnrl6q0b411a3108elak0d3ko5p].[:Measure Names]' />
              <lod column='[federated.1nnrl6q0b411a3108elak0d3ko5p].[sum:Calculation_3306979200694067200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nnrl6q0b411a3108elak0d3ko5p].[Multiple Values]</rows>
        <cols>[federated.1nnrl6q0b411a3108elak0d3ko5p].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{D56F51C7-F128-49A1-822D-EE51AC70BE28}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N States' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='1' max='50' min='1' />
        </column>
        <column alias='Total Energy (T Btu)' caption='Dynamic Measure' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='1.'>
          <calculation class='tableau' formula='1.' />
          <aliases>
            <alias key='1.' value='Total Energy (T Btu)' />
            <alias key='2.' value='Total (billion dollars)' />
            <alias key='3.' value='Per household (M Btu)' />
            <alias key='4.' value='Per household (dollars)' />
            <alias key='5.' value='Per household member (million Btu)' />
            <alias key='6.' value='Per household member (dollars)' />
            <alias key='7.' value='Per square foot (K Btu)' />
            <alias key='8.' value='Per square foot (dollars)' />
          </aliases>
          <members>
            <member alias='Total Energy (T Btu)' value='1.' />
            <member alias='Total (billion dollars)' value='2.' />
            <member alias='Per household (M Btu)' value='3.' />
            <member alias='Per household (dollars)' value='4.' />
            <member alias='Per household member (million Btu)' value='5.' />
            <member alias='Per household member (dollars)' value='6.' />
            <member alias='Per square foot (K Btu)' value='7.' />
            <member alias='Per square foot (dollars)' value='8.' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='6' param='vert' type-v2='layout-flow' w='82399' x='800' y='1000'>
              <zone h='37562' id='8' name='State Map' w='82399' x='800' y='1000'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30062' id='13' name='Fuel Consumption' w='82399' x='800' y='38562'>
                <layout-cache minheight='184' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='243' h='30375' id='1' is-fixed='true' param='horz' type-v2='layout-flow' w='82399' x='800' y='68624'>
                <zone h='30375' id='4' name='Household Total Energy Consumption' w='82399' x='800' y='68624'>
                  <layout-cache fixed-size-h='121' fixed-size-w='922' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83199' y='1000'>
              <zone h='6500' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83199' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23000' id='12' mode='list' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83199' y='7500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='38' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='37562' id='8' is-fixed='true' name='State Map' w='82399' x='800' y='1000'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='11' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='16000' x='83199' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23000' id='12' mode='list' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='16000' x='83199' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='30062' id='13' is-fixed='true' name='Fuel Consumption' w='82399' x='800' y='38562'>
                  <layout-cache minheight='184' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='235' h='30375' id='4' is-fixed='true' name='Household Total Energy Consumption' w='82399' x='800' y='68624'>
                  <layout-cache fixed-size-h='121' fixed-size-w='922' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5125645D-7364-4166-B6EB-2EA75D23BDF0}' />
    </dashboard>
    <dashboard name='Final Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Analysis of Energy Consumption in the US</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f1f0' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-color' id='story-description_7' value='#e15759' />
          <format attr='font-style' id='story-description_9' value='normal' />
          <format attr='font-weight' id='story-description_9' value='normal' />
          <format attr='text-decoration' id='story-description_9' value='none' />
          <format attr='font-style' id='story-description_10' value='normal' />
          <format attr='font-weight' id='story-description_10' value='normal' />
          <format attr='text-decoration' id='story-description_10' value='none' />
          <format attr='font-style' id='story-description_11' value='normal' />
          <format attr='font-weight' id='story-description_11' value='normal' />
          <format attr='text-decoration' id='story-description_11' value='none' />
          <format attr='border-color' id='story-description_10' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='828' maxwidth='1059' minheight='100' minwidth='1059' sizing-mode='range' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97824' id='1' param='vert' removable='false' type-v2='layout-flow' w='98490' x='755' y='1088'>
            <zone h='4490' id='3' type-v2='title' w='98490' x='755' y='1088' />
            <zone h='8571' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98490' x='755' y='5578' />
            <zone h='84763' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98490' x='755' y='14149'>
              <flipboard active-id='2' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='US Energy consumption by source' id='1'>
                    <capturedDeltas>
                      <worksheet name='US Energy consumption by source'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1nnrl6q0b411a3108elak0d3ko5p].[Multiple Values]' scope='rows' value='Quadrillio BTU' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Consumption per sq ft by home size' id='2'>
                    <currentDeltas>
                      <worksheet name='Consumption per sq ft by home size'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontcolor='#787878'>Being 1/3rd the size of the largest in the category they spend 60% of the largest</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.526718'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.14g1uxh1pkhrv318ps6351y72jxz].[none:Total square footagef:nk]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>&quot;1,000 to 1,499&quot;</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='1551.2158054711247'>
                                  <node-reference>
                                    <axis>[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per household:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='-14' y='-101' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per household:qk]' scope='rows' value='Expenditure per household ($)' />
                          </style-rule>
                          <style-rule element='annotation'>
                            <format attr='border-color' id='annotation_0' value='#000000' />
                            <format attr='border-style' id='annotation_0' value='solid' />
                            <format attr='border-style' id='addedDelta_annotation_0' value='solid' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas>
                      <worksheet name='Consumption per sq ft by home size'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='0' mark-position='1' pullback='0' text-width='134'>
                            <formatted-text>
                              <run bold='true'>Being 1/3 rd the size they pay 60% of the expenditure</run>
                              <run>Æ&#10;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.522523'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.14g1uxh1pkhrv318ps6351y72jxz].[none:Total square footagef:nk]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>&quot;1,000 to 1,499&quot;</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='1553.1802120141342'>
                                  <node-reference>
                                    <axis>[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per household:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='-67' y='-70' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.14g1uxh1pkhrv318ps6351y72jxz].[sum:Per household:qk]' scope='rows' value='Expenditure per household ($)' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Housing Unit per Household Member' id='3' />
                  <story-point captured-sheet='Dashboard' id='4'>
                    <currentDeltas>
                      <worksheet name='Fuel Consumption'>
                        <filter class='categorical' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action1_232ED01A70884F4084E53B29E2E93723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Household Total Energy Consumption'>
                        <filter class='categorical' column='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action1_232ED01A70884F4084E53B29E2E93723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='State Map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Latitude (generated)]' field-type='quantitative' max='12077710.704569049' min='3127657.6339087663' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.01s3iiz0ozi32219nwd471h0wsf5].[Longitude (generated)]' field-type='quantitative' max='47384104.968185499' min='17971631.058584288' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection />
                      </worksheet>
                      <datasource name='Parameters'>
                        <column name='[Parameter 1]' value='50' />
                      </datasource>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='4589' id='9' story-point-id='2' type-v2='text' w='46648' x='2927' y='7367'>
          <formatted-text>
            <run bold='true' fontsize='18'>Smaller Homes Consume More per Sq Ft!</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='10340' hidden='true' id='7' story-point-id='1' type-v2='text' w='43909' x='27856' y='5442'>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='28'>8%</run>
            <run>Æ&#10;</run>
            <run fontcolor='#e15759'>is the contribution of renewables to the total</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='10884' hidden='true' id='8' story-point-id='1' type-v2='text' w='26346' x='72616' y='5034'>
          <formatted-text>
            <run bold='true' fontsize='28'>7%</run>
            <run>&#10;Increase post Covid</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='10340' hidden='true' id='6' story-point-id='1' type-v2='text' w='26346' x='755' y='5442'>
          <formatted-text>
            <run bold='true' fontsize='26'>#2</run>
            <run>Æ&#10;</run>
            <run fontsize='15'>Carbon emitting country</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='3623' id='10' story-point-id='2' type-v2='text' w='30500' x='39849' y='17271'>
          <formatted-text>
            <run>Energy Consumption per household
</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3623' id='11' story-point-id='2' type-v2='text' w='29556' x='39660' y='57488'>
          <formatted-text>
            <run>Energy Expenditure per household</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3673' hidden='true' id='12' story-point-id='3' type-v2='text' w='30406' x='36544' y='17823'>
          <formatted-text>
            <run>Energy Consumption per household</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='3623' hidden='true' id='13' story-point-id='3' type-v2='text' w='24551' x='39754' y='53623'>
          <formatted-text>
            <run>Energy expenditure per sq ft&#10;</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='5034' hidden='true' id='14' story-point-id='3' type-v2='text' w='34466' x='63267' y='23129'>
          <formatted-text>
            <run bold='true' fontsize='12' italic='true'>Larger Apartment buildings is the way forward!</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{E59AA4CF-8D6E-4DAF-A0E3-0E5C50F4E47C}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='Energy consumption' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card param='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Number of members in a Household:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Number of members in a Household:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Number of members in a Household:ok]</field>
            <field>[federated.195t77c1pbeg4l18ml9dl0zji2hk].[none:Year of construction:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C579214-3976-4A56-A6FC-097BB255F800}' />
    </window>
    <window class='worksheet' name='US Energy consumption by source'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.1nnrl6q0b411a3108elak0d3ko5p].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nnrl6q0b411a3108elak0d3ko5p].[:Measure Names]</field>
            <field>[federated.1nnrl6q0b411a3108elak0d3ko5p].[none:year:ok]</field>
            <field>[federated.1nnrl6q0b411a3108elak0d3ko5p].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA6D51E2-CC1E-48E0-94A5-FE57051CB9B0}' />
    </window>
    <window class='worksheet' name='Housing Unit per Household Member'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0woaopf1iooph512tz2gy1l1hwzx].[none:Housing unit type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D760848-1898-4D22-AC71-8BDD565B14BE}' />
    </window>
    <window class='worksheet' name='Consumption per sq ft by home size'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14g1uxh1pkhrv318ps6351y72jxz].[none:Total square footagef:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5349F8A1-0EB3-4A76-BB72-A9C4B292204E}' />
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Fuel Consumption'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Household Total Energy Consumption' />
        <viewpoint name='State Map'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:State:nk]</field>
                    <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Geometry (generated)]</field>
                    <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Latitude (generated)]</field>
                    <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[Longitude (generated)]</field>
                    <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[usr:Calculation1:ok]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;POLYGON((-91.4194 40.3783,-91.3757 40.3919,-91.381 40.4485,-91.3691 40.5125,-91.4062 40.5427,-91.3599 40.6018,-91.3091 40.6254,-91.2479 40.6384,-91.1853 40.6378,-91.1208 40.6728,-91.1157 40.7252,-91.0925 40.7768,-91.0969 40.8114,-90.9985 40.9081,-90.9629 40.925,-90.9423 41.0347,-90.9463 41.0947,-90.9897 41.1557,-91.0419 41.1665,-91.1142 41.25,-91.0736 41.3105,-91.072 41.3336,-91.0484 41.4095,-90.9752 41.434,-90.9321 41.4216,-90.8576 41.4528,-90.7375 41.4501,-90.6558 41.4621,-90.5952 41.511,-90.5409 41.5261,-90.4614 41.5235,-90.4128 41.5653,-90.3432 41.5878,-90.3435 41.647,-90.3131 41.6996,-90.3161 41.7288,-90.2786 41.7674,-90.188 41.8032,-90.152 41.9289,-90.1649 41.9489,-90.1406 41.996,-90.1542 42.0331,-90.171 42.1252,-90.2095 42.1527,-90.3172 42.1936,-90.3911 42.2255,-90.4309 42.2782,-90.4159 42.3227,-90.4738 42.3815,-90.555 42.4161,-90.5707 42.4417,-90.654 42.4785,-90.6409 42.5083,-90.4264 42.5071,-90.1574 42.5083,-89.8376 42.5057,-88.9404 42.495,-88.7765 42.492,-88.7074 42.4936,-88.1995 42.4946,-87.8062 42.4926,-87.8054 42.3837,-87.8344 42.3024,-87.7592 42.1524,-87.6815 42.0781,-87.6163 41.8689,-87.5241 41.7092,-87.5268 41.2982,-87.5261 40.737,-87.5264 40.4912,-87.5314 40.148,-87.5332 39.8831,-87.5316 39.3479,-87.5783 39.3403,-87.619 39.3017,-87.6041 39.2595,-87.5788 39.2449,-87.577 39.2111,-87.6287 39.1574,-87.6587 39.136,-87.6184 39.1043,-87.6203 39.0866,-87.5726 39.0573,-87.5735 38.9854,-87.5133 38.956,-87.5229 38.9024,-87.552 38.8603,-87.5311 38.8525,-87.5274 38.8188,-87.4952 38.782,-87.5196 38.6972,-87.5972 38.6653,-87.6515 38.5682,-87.6701 38.5452,-87.6458 38.5091,-87.7446 38.4773,-87.7308 38.4492,-87.7437 38.4144,-87.785 38.368,-87.8061 38.3631,-87.8511 38.2751,-87.8783 38.3078,-87.9068 38.2696,-87.9373 38.2924,-87.9602 38.2371,-87.9879 38.257,-87.9828 38.2067,-87.9109 38.1626,-87.9748 38.1105,-88.0131 38.1035,-88.0047 38.084,-87.9607 38.1002,-87.9672 38.0671,-88.0421 38.0463,-88.0176 38.0347,-88.0126 37.9771,-88.037 37.9563,-88.0134 37.8949,-88.0922 37.8909,-88.028 37.7992,-88.0638 37.7386,-88.1224 37.7097,-88.1594 37.6618,-88.1334 37.5743,-88.069 37.5253,-88.0613 37.5052,-88.0842 37.4727,-88.134 37.4717,-88.2785 37.4533,-88.3581 37.4046,-88.415 37.4234,-88.4763 37.3867,-88.4871 37.3386,-88.5158 37.2839,-88.5109 37.261,-88.448 37.2035,-88.4247 37.1525,-88.4592 37.074,-88.4904 37.068,-88.5656 37.0798,-88.6307 37.1214,-88.7224 37.1412,-88.8056 37.1887,-88.928 37.2265,-88.9723 37.2298,-89.03 37.2112,-89.093 37.1565,-89.1113 37.1191,-89.1719 37.0681,-89.1828 37.0382,-89.167 37.0028,-89.1343 36.9809,-89.1921 36.98,-89.2034 37.0189,-89.2599 37.0641,-89.3077 37.0697,-89.3014 37.045,-89.2576 37.0155,-89.2921 36.9922,-89.3127 37.009,-89.3766 37.0385,-89.389 37.1083,-89.4256 37.1382,-89.4619 37.1995,-89.4607 37.2506,-89.4887 37.2515,-89.5185 37.2863,-89.4861 37.3348,-89.436 37.3444,-89.422 37.3805,-89.4398 37.4372,-89.4712 37.4665,-89.5164 37.5356,-89.5216 37.5722,-89.4784 37.5989,-89.5177 37.6412,-89.512 37.6855,-89.5833 37.7133,-89.6181 37.7498,-89.6679 37.7603,-89.6743 37.8031,-89.7399 37.8469,-89.7975 37.8621,-89.798 37.8797,-89.8448 37.9056,-89.9056 37.8694,-89.9386 37.8743,-89.9742 37.9195,-89.9313 37.9483,-89.9421 37.9701,-90.0084 37.9702,-90.0573 38.0144,-90.0928 38.0173,-90.1308 38.0623,-90.2067 38.088,-90.2527 38.1278,-90.2906 38.1704,-90.3316 38.1876,-90.3639 38.2364,-90.3739 38.2819,-90.3682 38.3403,-90.3376 38.3969,-90.302 38.4246,-90.2662 38.5223,-90.1918 38.599,-90.1813 38.6604,-90.2092 38.7028,-90.2052 38.7322,-90.1664 38.7726,-90.1177 38.8057,-90.1133 38.8493,-90.2758 38.9235,-90.3095 38.9241,-90.3927 38.9591,-90.4508 38.9678,-90.5459 38.874,-90.5823 38.8688,-90.6251 38.8887,-90.6656 38.9342,-90.679 38.9939,-90.7125 39.0571,-90.6827 39.0883,-90.7091 39.1551,-90.727 39.2512,-90.7935 39.3095,-90.921 39.3837,-90.9367 39.3995,-91.0383 39.4484,-91.1009 39.539,-91.1483 39.5458,-91.178 39.5982,-91.2233 39.6176,-91.3067 39.6849,-91.3678 39.729,-91.3651 39.7587,-91.378 39.8113,-91.4329 39.8406,-91.4435 39.8936,-91.4209 39.9149,-91.4355 39.9452,-91.4949 40.0365,-91.4896 40.0574,-91.5108 40.1261,-91.5053 40.2005,-91.4973 40.2488,-91.4621 40.3424,-91.4194 40.3783))&quot;</value>
                  <value>40.0</value>
                  <value>-89.25</value>
                  <value>4</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{A9BFF9C5-C0C7-4397-8881-4A8CC883735D}' />
    </window>
    <window class='dashboard' maximized='true' name='Final Story' tab-color='#17927d'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{401EC404-5947-4460-A9A2-201AF8142D11}' />
    </window>
    <window class='worksheet' hidden='true' name='Fuel Consumption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52F30118-2EC0-4CB1-B7F8-CA184BB2E915}' />
    </window>
    <window class='worksheet' hidden='true' name='Household Total Energy Consumption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE75E708-B5D0-41CD-AF79-DF4D0C6F02DF}' />
    </window>
    <window class='worksheet' hidden='true' name='State Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='231'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='list' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01s3iiz0ozi32219nwd471h0wsf5].[usr:Calculation_1707145801437552641:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8BBBD965-D9D8-4DE1-BE54-F0670352FF50}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Consumption per sq ft by home size' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzde3gU9b0/8PfMXrKbzeaeQEhIQhIiARIkXOQq5Va1B0W8W7Weqq3W1urR
      4+Voqz592np6Si/ap9b6tH3UHquCRQgGxHITAiGBBAgJCLlD7rfdZJO9z8zvDw77M4It2cxm
      2ez79Tw+kk32u5/57u68Z74z8x1BURQFREQUdsRgF0BERMHBACAiClMMACKiMMUAICIKUyEf
      AK2trcEugYgoJIV8ALhcrmCXQEQUkkI+AIiIyD8MACL6lxRFCeretqIosNlskCRpXL/mWGMA
      EI1zn332GV544QXff++9994l/+7IkSMYGhq65O8cDgeeeeaZQJb5lRRFweuvv45nnnkGzc3N
      l/Wcw4cPw263j+o1X331VTz77LPj+jgjA4BonJs1axYeeOABnD59GnfffTdWrlwJRVHw+eef
      o6ysDE6nE319fXjzzTdx6NAhtLe3w+l0oqqqChUVFXC5XFAUBVar1demoiioq6tDRUWF7/H+
      /n5UVFSgubkZg4ODaGtrg91uh9frRWNjIxRFQUtLC8rKynDu3DkoioKenh5YrVbU1dXB6XSi
      tbUVBw4cQH9/v++1zp07h5KSEtx3332YMGECent7UVJSgra2Nl8t1dXVKC8vh9vtRk9PD954
      4w2UlZWhs7MTdrsdx48fx9GjR+F2uwEAFosFFRUVaGpqwtDQECRJwtGjR3H8+HHIsozm5maU
      lpbiW9/6FhITE8fw3RpbmpdffvnlYBcxGhaLBXFxccEug+iKZTAYEBsbi6KiItx7772Ij4/H
      9u3b8e6778JiseDTTz9FWloaiouLoSgKTCYTWltbUVpaiqNHj+Lo0aOYP38+iouLsW7dOgDn
      t7Bfe+01yLKMzs5OpKam4rHHHoPb7cYHH3yA9PR0bNq0CYmJiTCZTHjppZewatUq/OUvf4HF
      YsEf//hHLF68GDt27MDf/vY37Ny5E1OmTMErr7yCqKgo/PWvf8V1110HURRRVlaGffv2QafT
      ISEhAS+//DK0Wi3+8pe/YO7cudi1axc++ugjdHd3Y8+ePZg4cSK2b98ORVEQGxvrC6pDhw6h
      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
      Y1arFY2NjcMeIyKi0fP7IPBzzz2Hnp4eKIoCnU6HmJiYURXidrvxySefoLq6Gt///vcRExOD
      trY2/OMf/0BWVhYqKipw2223jeo1iIjo//P7fgB/+tOf0NraioSEBCQlJWHGjBkoKCgYVTGL
      Fy8edjbRkSNHsHbtWsTExGDjxo1wOp0wGAzDniOKIjQazahe98tE0e8dozEnCILqy692ewCg
      UQTV2wykQPRpIPZiBSF0+lUUNar2qyAIEAQBsiyr1iYACCH0/R/t+s/vs4Camprw4x//GG+/
      /TaSkpLQ3t4+qgDQ6/VISEgY9pjL5YLJZIIgCIiPj8fAwAAiIiJ89yEAgMjISERFRfn9upfS
      atMA6FK1zUAxGAxITk5WtU1BEFQ/puP0SACaVG0zUERRDIk+BQCdrhuAU/V2AyE+Pg7JSep+
      VwPRr1GtHgB9qrYZKCaTaVSfVb8DIDExEe+88w5qampQXV2NZ555xu8ivoooipAkCVqtFg6H
      AwaDAYIgDLsB/eDgIIaGhlR9XYtV3fYCyeFwoL29XdU2A7G16vaqu5UWSLIsq96noiiqvqUK
      YNjG0JWup6cHOq9NtfYu7P2oHQA2m3o1BprNZhvVZ9XvAHjooYdw5swZZGVlYblBLK4AACAA
      SURBVPr06UhNTfW7CADwer2w2+1wuVwYHBxEREQEsrKycPjwYeTn56Onp4cTzhERqWjEASDL
      Mv7nf/4HZ8+eRXJyMl544QVVrgK22WyorKxEREQETp06hYyMDBQUFODgwYPYt28fbrjhhpAa
      7yQiutKNOADq6+shCAJee+01/PnPf0ZVVRXmzJkz6kLi4uKwcuXKix5funTpqNsmIqKLjfhw
      d19fH5KSkmC325GUlISzZ89iYGAAXq83EPUREVGAjHgPwGQyoby8HMePH/cdgNq7dy8eeeQR
      5OXlqV4gEREFxogDYMaMGXj99dcvepzj80REoWXEAXDh4gsiIgptoXPJGxERqYoBQEQUphgA
      RERhigFARBSmGABERGGKAUBEFKYYAEREYYoBQEQUphgARERhigFARBSmGABERGGKAUBEFKb8
      viXkWHC73di+fTscDgcKCwuRm5sb7JKIiMaNK3oPoLy8HFlZWbj11ltRUlISkJtqExGFqys6
      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
      83+KvwFzSXrzEWbRIQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard' width='384'>
      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
      PPbYY3jBC14A13WnDosAwFe/+lV88IMfRKlUwunTp/H3f//3Q9t85zvf8cS1AcBxHDSbTeRy
      OTz22GObssiuuuoq/OhHP8Iv/MIvAAB+/OMf41d+5VcADIS+67pQFAVnz57F0tIS7rrrLriu
      i5/85CdTHysMR48eheu6+N3f/V0AA+Wq64NbKAvva6+9Fl/72tfwute9DhcuXBDhLUVR8Ku/
      +qv45Cc/iauuugrxeNyzf8uy4DjOkECdBOl0WhwnFot5QnyKogiB7bquJ9zmui76/b74HkG4
      8sor8dBDD+Hmm29Gr9dDu90O/N7E6dOnUSwWRe6l0WjgmmuuEe+bpomf//mfxy233IJWq4W7
      774bz33uc4fOO2y9+bc7evQoXvayl+HZz342gMF9CTtGhAjzhJEKYFqLEBhYP895znPwpje9
      CYcOHcLFixfxnve8B69+9avxh3/4h/j2t7+NcrmMVqs1cj9Bx37e856HD3zgAzh8+DAqlYpw
      6S9evIgPfOAD6PV6UFUV99xzj+dzr3/963HnnXfiuuuuw6OPPooPfvCD4hijvqP83m233Yav
      fvWruOeee1Cr1XDdddfhwIEDAIBbbrkFd911Fw4dOoQ777wTTz75JD760Y/i3LlzOHPmzMhj
      HD9+3FPp8trXvnbIeufnX/SiF+Hd73437r77bmiaBsMw8Bd/8RdD+3zlK1+Jj3/843jrW9+K
      gwcPeo5/++234/bbbxf5AxnXX389HnroIdx0002h10HGiRMncNddd8FxHLRaLbz+9a8HAORy
      ORiGgXvuuQfXXHMNXvnKV+Khhx7CRz7yEZw9e9YTEnr88cdx1VVXDe1bPuZv/dZv4e6778Yz
      n/lM/PSnPxUKMAzdbhf33HMPDh8+jEajgUwmg+c///ni/Uqlgve///24+uqrcfHiRbzoRS8C
      MAg9fehDH8LVV1+N17/+9aHrzb/d6173Orz3ve/F0aNHUa/Xcd111+HXfu3XAo8RIcJcwd0m
      9Pt9t1qtuo7jiNcsy3LPnDnjGoax6f1WKhV3bW3N89rb3vY2t9FouM1mc+T5PPXUU1s6tuu6
      7sWLF4eO77quW61WxfFN03RPnz695WOFodVqua1WK/T9drstrvva2pp75513ivc6nY775je/
      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
      NdHQ5cjLy6O4uPiS/nb//v389re/5b//+797PR+V7Vi9ejUNDQ2XU9UhLxcuIyXkteTYsWNM
      nDiRH/7whzidTl5//XVMJhMjR45k+fLlvPrqq9hsNh588EEOHz5MTk4Oy5Yt48SJE1RVVXH3
      3Xd7zTC1e/duli5dyp49e1ixYgUBAQHq1Momk0nNCbxhwwbWrVvH448/zoYNG6itrWXZsmXY
      bDb27NlDS0sLjz32GDt37qSkpASz2dzrtjidTurr67Hb7bhcLrRaLX5+fvzzn/+kurqaX/3q
      V+qsnrm5uXz22WfMmzePjo4ODh06xA033EB4eLhHuYcOHWL//v3U1NRgMBjQ6XReyx6K7b2Y
      kSNHcvz4cU6dOoXdbqesrIyQkBCys7PZs2cP4eHhpKSksGbNGjo7O0lJSeHTTz8lISGBJUuW
      sH37dvUG4WqTk5PDzTffTGZmJlOmTOnx+7q6OrX+S5cuVbdr3LhxnDlzhs7OTtasWUNbWxtT
      p07t9bj2l8vlYtiwYezdu5fJkydjMBgwm818+umn6jk2adIk1q5dS1RUFJMnT1b3/8qVKz3W
      tX//fm666SZuueUWnE4nmzZtIj8/n/nz59PU1ERBQQFWq5XHHnuMt99+Wz2XampqMJvNREZG
      Ulpaqn7+0Ucf0dXVxY9//GMOHz58we/v+datW8df/vIXdDqdehHet28fO3fuZNy4cSQmJqrb
      AfD//t//w2Kx8Nxzz7Fu3Tq1rJMnT1JcXMzs2bOZN2/eVVsu+MgTgDJD5s9//nP1ZHnsscc4
      deoU/v7+TJ48ma6uLg4fPszOnTt56qmnGDduHPv372f69Om8//77Xtebk5NDamoq2dnZAJw+
      fZqWlhby8vK4//771eXuuece0tPTqaioIDU1lejoaHbu3EldXR233HIL06dPp6ioiGPHjvH4
      44+riWG8OXbsGKGhoYSFhXH8+HHKysqw2+18+eWX3HfffR4JZDZu3MhTTz3FwoUL2bdvH3/4
      wx/Ys2ePR7kVFRVs376dp556ipiYGMxmM2fPnr1qtvdiUlNTOXHiBC6Xi6CgIA4cOEBqaiqJ
      iYmMGjWKrKws5s6dS3JyMitXrmTNmjVkZGSQlZWFyWTi66+/5sEHH7zk8gfT7t27ue666ygo
      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
      DVfGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Energy consumption' width='384'>
      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
      4/8A4BzWqw5vThgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Final Story' width='384'>
      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
      8uQJQggj2KlUivX1daanp+np6UFRFODVCfO1tTUikUjOWHp6erh27RoLCwusra0xMTFBU1MT
      AwMDLC0toSgKly9f3pGvv5idnUVVVeLxeE770NAQjY2NPHnyhPn5ecxmM99//z0dHR0MDAxw
      7NgxqqurGR0dNeLU3NxMKBRCURR6enp4+fKlsbyJiYk3fp9TIBAgGo0ar7l69Sp2u51gMMjY
      2BiNjY08e/bMiOmnFg6H0TSNpaWlnPanT59y+fJlLl26RDKZJBKJ0NDQQHd3N0+fPsXlcnHm
      zBn8fj8Ac3Nz3Llzh6mpKTRNY3BwkKmpKcR/r55ZWFhAVVWi0ajRh6qqhMNhGhsbGRgYYHZ2
      luLiYq5evUpbWxv9/f2cOXOG+vp6ent7dyQemUyG6upqmpqaGB8fN9onJiYoKyvjxIkT9PX1
      0dHRQUNDAy9fvmR1dZVAIGDkj67rKIrC7du3GR4eJpVKMTc3ZxR3eLUjUlVVRVNTk5FTgFH0
      ksmksVFsbGwkHA6zurrK8+fPaWxspL+/34jtp5bNZmloaKCoqIjnz58b41xcXOTKlSucPXuW
      Z8+e4XA4uHDhAh0dHfj9fk6fPo3H4zHyYGhoiPv37zM/P08ymaS3t5e1tTVjeSUlJTQ2NhIM
      Bo2+e3t7OXv2LEePHmVgYICenh6uX7+OruvMzc0xOTnJ9evXmZyc/KArJD/bArDZ48eP+eKL
      L+jv72dpaYnZ2Vm8Xi+qqtLX10dVVRXpdBp4tSfi9XrxeDxkMhkKCwtZXFwkHo9js9nwer20
      trYSDocJh8OUlZUxPDwMQGlpKSdPntyyx2Oz2bDb7VRUVBCJRCgpKcFisRjLrquro6CgYEcS
      +ujRo1tusstmsxQUFGC1WnG73Tx79oy6ujqKiorIZrOsr69TXl6Oz+czNmAbcSotLeXRo0d8
      +eWXPHr0yCi633zzDYWFhTn9bBTHgwcPGnGZnZ0lk8mwtLSEqqpGQdmpLwOsqanh8OHDW9ot
      Fgutra10dXWxurpKZWUleXl5WCwWFhcXOXToEF6vl0QiAYDL5cLtdnPgwAG6u7txu90sLy8T
      CoUA8Pl8W46GLBYLa2trzM/Pk0gksFgszM/Ps7i4yNraGgUFBczOzhKLxVhZWfn0weDV3fgH
      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
      MFSrAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Housing Unit per Household Member' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='US Energy consumption by source' width='384'>
      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
      iL6sBTDQY+AAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
